spring.application.name=Banking-App
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.security.user.name=${SPRING_USER}
spring.security.user.password=${SPRING_PASSWORD}
logging.level.org.springframework.security=DEBUG
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

# Kafka Producer Properties
spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=accountDto:com.example.Banking.App.dto.AccountDto,transactionDto:com.example.Banking.App.dto.TransactionDto
# Kafka Consumer Properties
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=banking-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.example.Banking.App.dto,com.example.Banking.App.transaction